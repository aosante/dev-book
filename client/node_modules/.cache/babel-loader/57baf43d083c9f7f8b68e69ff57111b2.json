{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/andresosante/Aosante/Web Portfolio/DevBook/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/andresosante/Aosante/Web Portfolio/DevBook/client/src/components/posts/PostItem.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  .post {\\n    background-color: var(--card-color);\\n  }\\n  .post-buttons {\\n    display: flex;\\n    justify-content: center;\\n  }\\n  @media (max-width: 700px) {\\n    .post-buttons {\\n      flex-direction: column;\\n    }\\n    .post-buttons .btn {\\n      margin-bottom: 1rem;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport styled from 'styled-components';\nconst Post = styled.div(_templateObject());\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  auth,\n  showActions\n}) => {\n  return React.createElement(Post, {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post bg-dark p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, date)), showActions ? React.createElement(\"div\", {\n    className: \"post-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: _ => addLike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, likes.length)), React.createElement(\"button\", {\n    onClick: _ => removeLike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/posts/\".concat(_id),\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Discussion\", ' ', comments.length > 0 && React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    onClick: _ => deletePost(_id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))) : null)));\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\nPostItem.defaultProps = {\n  showActions: true\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/andresosante/Aosante/Web Portfolio/DevBook/client/src/components/posts/PostItem.jsx"],"names":["React","PropTypes","connect","Link","Moment","addLike","removeLike","deletePost","styled","Post","div","PostItem","post","_id","text","name","avatar","user","likes","comments","date","auth","showActions","_","length","loading","propTypes","object","isRequired","func","defaultProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport styled from 'styled-components';\n\nconst Post = styled.div`\n  .post {\n    background-color: var(--card-color);\n  }\n  .post-buttons {\n    display: flex;\n    justify-content: center;\n  }\n  @media (max-width: 700px) {\n    .post-buttons {\n      flex-direction: column;\n    }\n    .post-buttons .btn {\n      margin-bottom: 1rem;\n    }\n  }\n`;\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  auth,\n  showActions,\n}) => {\n  return (\n    <Post className=\"posts\">\n      <div className=\"post bg-dark p-1 my-1\">\n        <div>\n          <Link to={`/profile/${user}`}>\n            <img className=\"round-img\" src={avatar} alt=\"\" />\n            <h4>{name}</h4>\n          </Link>\n        </div>\n        <div>\n          <p className=\"my-1\">{text}</p>\n          <p className=\"post-date\">\n            Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n          </p>\n          {showActions ? (\n            <div className=\"post-buttons\">\n              <button\n                onClick={(_) => addLike(_id)}\n                type=\"button\"\n                className=\"btn btn-light\"\n              >\n                <i className=\"fa fa-thumbs-up\"></i>\n                {likes.length > 0 && <span>{likes.length}</span>}\n              </button>\n              <button\n                onClick={(_) => removeLike(_id)}\n                type=\"button\"\n                className=\"btn btn-light\"\n              >\n                <i className=\"fa fa-thumbs-down\"></i>\n              </button>\n              <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                Discussion{' '}\n                {comments.length > 0 && (\n                  <span className=\"comment-count\">{comments.length}</span>\n                )}\n              </Link>\n              {!auth.loading && user === auth.user._id && (\n                <button\n                  onClick={(_) => deletePost(_id)}\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                >\n                  <i className=\"fa fa-times\"></i>\n                </button>\n              )}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </Post>\n  );\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}