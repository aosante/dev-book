{"ast":null,"code":"var _jsxFileName = \"/Users/andresosante/Aosante/Web Portfolio/DevBook/client/src/components/post/Post.jsx\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({\n  match\n}) => {\n  const loading = useSelector(state => state.post.loading);\n  const post = useSelector(state => state.post.post);\n  const dispathc = useDispatch();\n  useEffect(() => {\n    dispatchEvent(getPost(match.params.id));\n  }, [getPost, match.params.id]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, post.comments.map(cmt => React.createElement(CommentItem, {\n    key: cmt._id,\n    comment: cmt,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/andresosante/Aosante/Web Portfolio/DevBook/client/src/components/post/Post.jsx"],"names":["React","useEffect","Link","useDispatch","useSelector","Spinner","PostItem","CommentForm","CommentItem","getPost","Post","match","loading","state","post","dispathc","dispatchEvent","params","id","_id","comments","map","cmt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,QAAMC,OAAO,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OAAvB,CAA3B;AACA,QAAME,IAAI,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAAxB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,aAAa,CAACP,OAAO,CAACE,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAR,CAAb;AACD,GAFQ,EAEN,CAACT,OAAD,EAAUE,KAAK,CAACM,MAAN,CAAaC,EAAvB,CAFM,CAAT;AAIA,SAAON,OAAO,IAAIE,IAAI,KAAK,IAApB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,0CACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAmBC,GAAD,IACjB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,GAAG,CAACH,GAAtB;AAA2B,IAAA,OAAO,EAAEG,GAApC;AAAyC,IAAA,MAAM,EAAER,IAAI,CAACK,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CAHF;AAgBD,CAzBD;;AA2BA,eAAeT,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ match }) => {\n  const loading = useSelector((state) => state.post.loading);\n  const post = useSelector((state) => state.post.post);\n  const dispathc = useDispatch();\n\n  useEffect(() => {\n    dispatchEvent(getPost(match.params.id));\n  }, [getPost, match.params.id]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <>\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments\">\n        {post.comments.map((cmt) => (\n          <CommentItem key={cmt._id} comment={cmt} postId={post._id} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}